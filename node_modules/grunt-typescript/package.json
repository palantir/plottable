{
  "author": {
    "name": "kazuhide maruyama"
  },
  "name": "grunt-typescript",
  "description": "compile typescript to javascript",
  "version": "0.2.7",
  "homepage": "https://github.com/k-maru/grunt-typescript",
  "repository": {
    "type": "git",
    "url": "git@github.com:k-maru/grunt-typescript.git"
  },
  "bugs": {
    "url": "https://github.com/k-maru/grunt-typescript/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/k-maru/grunt-typescript/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "typescript": "0.9.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "typescript": "0.9.5",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt-exec": "~0.4.2"
  },
  "optionalDependencies": {},
  "keywords": [
    "gruntplugin",
    "typescript"
  ],
  "readme": "grunt-typescript\r\n================\r\n\r\nCompile TypeScript\r\n\r\n## Documentation\r\nYou'll need to install `grunt-typescript` first:\r\n\r\n    npm install grunt-typescript --save-dev\r\n\r\nThen modify your `Gruntfile.js` file by adding the following line:\r\n\r\n    grunt.loadNpmTasks('grunt-typescript');\r\n\r\nThen add some configuration for the plugin like so:\r\n\r\n    grunt.initConfig({\r\n        ...\r\n        typescript: {\r\n          base: {\r\n            src: ['path/to/typescript/files/**/*.ts'],\r\n            dest: 'where/you/want/your/js/files',\r\n            options: {\r\n              module: 'amd', //or commonjs\r\n              target: 'es5', //or es3\r\n              base_path: 'path/to/typescript/files',\r\n              sourcemap: true,\r\n              declaration: true\r\n            }\r\n          }\r\n        },\r\n        ...\r\n    });\r\n   \r\nIf you want to create a js file that is a concatenation of all the ts file (like -out option from tsc), \r\nyou should specify the name of the file with the '.js' extension to dest option.\r\n\r\n    grunt.initConfig({\r\n        ...\r\n        typescript: {\r\n          base: {\r\n            src: ['path/to/typescript/files/**/*.ts'],\r\n            dest: 'where/you/want/your/js/file.js',\r\n            options: {\r\n              module: 'amd', //or commonjs\r\n            }\r\n          }\r\n        },\r\n        ...\r\n    });\r\n\r\n##Options\r\n\r\n###nolib `boolean`\r\nDo not include a default lib.d.ts with global declarations\r\n\r\n###target `string`\r\nSpecify ECMAScript target version: \"ES3\" (default) or \"ES5\"\r\n\r\n###module `string`\r\nSpecify module code generation: \"commonjs\" (default) or \"amd\"\r\n\r\n###sourcemap `boolean`\r\nGenerates corresponding .map files\r\n\r\n###declaration `boolean`\r\nGenerates corresponding .d.ts file\r\n\r\n###comments `boolean`\r\nEmit comments to output\r\n\r\n###noImplicitAny `boolean`\r\nWarn on expressions and declarations with an implied 'any' type.\r\n\r\n##Original Options\r\n\r\n###newLine `string`\r\nSpecify newline code: \"auto\" (default) or \"crlf\" or \"lf\". This options is experimental.\r\n\r\n###ignoreTypeCheck `boolean`\r\nDefault value is true. This options is experimental.\r\n\r\n###base_path `string`\r\n\r\n###disallowAsi `boolean`\r\nDo not allow auto semicolon insertion. This options is experimental.\r\n\r\n\r\nâ€»I'm sorry for poor English\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-typescript@0.2.7",
  "_from": "grunt-typescript@~0.2.0"
}
