<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <title> - jsFiddle demo by cmorford</title>

  <script type='text/javascript' src='/js/lib/dummy.js'></script>




  <link rel="stylesheet" type="text/css" href="/css/result-light.css">

  <style type='text/css'>
    </style> <link rel="stylesheet" type="text/css" href="https://rawgithub.com/palantir/plottable/master/plottable.css"> <style type="text/css">
/*-- Add custom styles after this line --*/
 .demo-title {
    font-size: 24 pt;
}
.plottable .y-axis .tick line {
    opacity: 1
}

.plottable .x-axis .tick line {
    opacity: 1
}

  </style>



<script type='text/javascript'>//<![CDATA[

var renderAreaD1;
var renderAreaD2;
var renderApple;
var renderOrange;
var renderBanana;
var renderGrape;

var renderArea;

var dataseries1;
var dataseries2;
var dataseries3;
var dataseries4;
var dataseries5;
var dataseries6;

var xScale, yScale;

var basicTable;
var title1;
var legend1;
var colorScale1;

window.onload = function () {
    var svg = d3.select("#chart");
    svg.attr("width", '100%').attr("height", 500);

    //data
    dataseries1 = new Plottable.Dataset(makeRandomData(50));
    dataseries1.metadata({name: "series1"});
    dataseries2 = new Plottable.Dataset(makeRandomData(50));
    dataseries2.metadata({name: "series2"});
    dataseries3 = new Plottable.Dataset(makeRandomData(50));
    dataseries3.metadata({name: "apples"});
    dataseries4 = new Plottable.Dataset(makeRandomData(50));
    dataseries4.metadata({name: "oranges"});
    dataseries5 = new Plottable.Dataset(makeRandomData(50));
    dataseries5.metadata({name: "bananas"});
    dataseries6 = new Plottable.Dataset(makeRandomData(50));
    dataseries6.metadata({name: "grapes"});

    colorScale1 = new Plottable.ColorScale("10");
    colorScale1.domain(["series1", "series2", "apples", "oranges", "bananas", "grapes"]);

    //Axis
    xScale = new Plottable.LinearScale();
    yScale = new Plottable.LinearScale();
    var xAxis = new Plottable.XAxis(xScale, "bottom");
    var yAxis = new Plottable.YAxis(yScale, "left");


    var colorProjector = function(d, i, m) {
       return colorScale1.scale(m.name);
    };

    //rendering
    renderAreaD1 = new Plottable.CircleRenderer(dataseries1, xScale, yScale);
    renderAreaD2 = new Plottable.LineRenderer(dataseries2, xScale, yScale);
    renderApple = new Plottable.AreaRenderer(dataseries3, xScale, yScale);
    renderBanana = new Plottable.LineRenderer(dataseries4, xScale, yScale);
    renderOrange = new Plottable.CircleRenderer(dataseries5, xScale, yScale);
    renderGrape = new Plottable.RectRenderer(dataseries6, xScale, yScale);

    renderAreaD1.project("fill", colorProjector);
    renderAreaD2.project("stroke", colorProjector);
    renderApple.project("fill", colorProjector);
    renderBanana.project("stroke", colorProjector);
    renderOrange.project("fill", colorProjector);
    renderGrape.project("fill", colorProjector);

    renderArea = renderAreaD1.merge(renderAreaD2);
    button5Callback();

    //title + legend
    title1 = new Plottable.TitleLabel( "Two Data Series", "horizontal");
    legend1 = new Plottable.Legend(colorScale1);
    var titleTable = new Plottable.Table().addComponent(0,0, title1)
                                          .addComponent(0,1, legend1);

    basicTable = new Plottable.Table().addComponent(0,2, titleTable)
                .addComponent(1, 1, yAxis)
                .addComponent(1, 2, renderArea)
                .addComponent(2, 2, xAxis)




    basicTable.renderTo(svg);


};

function button1Callback() {
    title1.setText("");
}

function button2Callback() {
    title1.setText("tiny");
}

function button3Callback() {
    title1.setText("abcdefghij klmnopqrs tuvwxyz ABCDEF GHIJK LMNOP QRSTUV WXYZ");
}

function button4Callback() {
    colorScale1.domain([]);
    renderApple.remove();
    renderGrape.remove();
    renderOrange.remove();
    renderBanana.remove();
    renderAreaD1.remove();
    renderAreaD2.remove();
}

function button5Callback() {
    colorScale1.domain(["series1", "series2"]);

    renderApple.remove();
    renderGrape.remove();
    renderOrange.remove();
    renderBanana.remove();

    renderArea
    .merge(renderAreaD1)
    .merge(renderAreaD2);
}

function button6Callback() {
    colorScale1.domain(["series1", "series2", "apples", "oranges", "bananas", "grapes"]);
    renderArea
    .merge(renderApple)
    .merge(renderBanana)
    .merge(renderOrange)
    .merge(renderGrape)
    .merge(renderAreaD1)
    .merge(renderAreaD2);
    basicTable.renderTo();
}

//]]>

</script>


</head>
<body>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script src="https://rawgithub.com/palantir/plottable/master/plottable.js"></script>
<script src="http://rawgithub.com/palantir/plottable/master/examples/exampleUtil.js"></script>
<div class="demo-title">Simple Chart</div>
<br>


<br>
<svg id="chart"></svg>

    <button onclick="button1Callback()">no title</button>
    <button onclick="button2Callback()">short title</button>
    <button onclick="button3Callback()">long title</button>
    <br>
    <button onclick="button4Callback()">no legend</button>
    <button onclick="button5Callback()">short legend</button>
    <button onclick="button6Callback()">tall legend</button>
<p />

</body>


</html>

